<?xml version="1.0" encoding="UTF-8" ?>
<project name="AN.ON" default="dist" basedir=".">
  <description>Ant Build file for the various compontens of the AN.ON project</description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="build.libs" location="build/libs"/>
  <property name="dist" location="dist"/>
  <property name="classpath_httplib_file_name" location="${build.libs}/HTTPClient.jar"/>
  <property name="classpath_ftplib_file_name" location="${build.libs}/ApacheFTPClient.jar"/>
  <property name="classpath_log4j_file_name" location="${build.libs}/log4j.jar"/>
  <property name="classpath_bouncy_file_name" location="${build.libs}/BouncyCastleLightForJAP.jar"/>
  <property name="classpath_xmlrpc_file_name" location="${build.libs}/apache-xml-rpc-1.1.jar"/>
  <path id="classpath_httplib" location="${classpath_httplib_file_name}"/>
  <path id="classpath_ftplib" location="${classpath_ftplib_file_name}"/>
  <path id="classpath_xml-rpc" location="${classpath_xmlrpc_file_name}"/>
  <path id="classpath_java_mail" location="${build.libs}/mail.jar"/>
  <path id="classpath_jama" location="${build.libs}/jama.jar"/>
  <path id="classpath_log4j" location="${classpath_log4j_file_name}"/>
  <path id="classpath_bouncycastle_jap" location="${classpath_bouncy_file_name}"/>
  <path id="classpath_all">
    <path refid="classpath_httplib"/>
    <path refid="classpath_ftplib"/>
    <path refid="classpath_xml-rpc"/>
    <path refid="classpath_java_mail"/>
    <path refid="classpath_jama"/>
    <path refid="classpath_log4j"/>
    <path refid="classpath_bouncycastle_jap"/>
  </path>
  <target name="init-dirs">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build.libs}"/>
  </target>
  <target name="init-libs" depends="init-dirs">
    <get src="http://anon.inf.tu-dresden.de/develop/http.jar" verbose="true" dest="${classpath_httplib_file_name}">    </get>
    <get src="http://anon.inf.tu-dresden.de/develop/BouncyCastleLightForJAP.jar" verbose="true" dest="${classpath_bouncy_file_name}">    </get>
    <get src="http://anon.inf.tu-dresden.de/develop/ApacheFTPClient.jar" verbose="true" dest="${classpath_ftplib_file_name}">    </get>
    <get src="http://anon.inf.tu-dresden.de/develop/apache-xmlrpc-1.1.jar" verbose="true" dest="${classpath_xmlrpc_file_name}">    </get>
    <get src="http://anon.inf.tu-dresden.de/develop/mail.jar" verbose="true" dest="${build.libs}/mail.jar">    </get>
    <get src="http://anon.inf.tu-dresden.de/develop/Jama.jar" verbose="true" dest="${build.libs}/jama.jar">    </get>
    <get src="http://anon.inf.tu-dresden.de/develop/log4j.jar" verbose="true" dest="${classpath_log4j_file_name}">    </get>
  </target>
  <target name="init" depends="init-libs"/>
  <target name="compile" depends="init" description="compile the source ">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="classpath_all"/>
  </target>
  <target name="dist" depends="compile,make-only-jap-jar" description="generate the distribution">  </target>
  <target name="make-only-jap-jar">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
    <jar jarfile="${dist}/JAP.jar" manifest="MANIFEST.MF">
      <fileset dir="${build}" includes="**/*.class">
        <exclude name="jpi/**/*"/>
        <exclude name="infoservice/**/*"/>
        <exclude name="misc/**/*"/>
        <exclude name="captcha/**/*"/>
      </fileset>
      <zipfileset dir="src" includes="JAPM*.properties"/>
      <zipfileset dir="." includes="help/**/*"/>
      <zipfileset dir="." includes="images/**/*"/>
      <zipfileset dir="." includes="certificates/**/*"/>
      <zipfileset src="${classpath_httplib_file_name}"/>
      <zipfileset src="${classpath_ftplib_file_name}"/>
      <zipfileset src="${classpath_log4j_file_name}"/>
      <zipfileset src="${classpath_bouncy_file_name}"/>
      <zipfileset src="${classpath_xmlrpc_file_name}"/>
    </jar>
  </target>
  <target name="clean" description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
